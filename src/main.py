from graph import stream_graph_updates
from tools.FileBase import FileBase
from dotenv import load_dotenv
import os 
load_dotenv()
import logging 
logger = logging.getLogger("main")


def main(): 
    logger.info(os.getenv('CODEBASE_DIR'))
    f_base = FileBase(os.getenv('CODEBASE_DIR'))
    num_f = f_base.traverse()
    
    for i in range(num_f): 
        try:
            f = f_base.get_file()
            code: str = f_base.file_content(f)
            content = " code: " + code

            prompt = """You are a computer scientist that strives for 
            1. Efficiency and performance of code, 
            2. Readability and maintanability
            3. Simplicity (Keep it simple stupid where possible)
            Your task is to improve documentation and commentation of the code, as well as provide Unit Tests where none are present
            extract the tests in an own Method called UNIT_test.
            ALWAYS add an caps lock comment '_______GENERATED BY CODE_AGENT_______' 
            to generated code from you at the beginning of the docstring. Dont change the existing code, only create comments and unit tests.
            Return ONLY the code, dont provide any natural language response as the content will be taken over directly in the codebase """
            updated_file: str = stream_graph_updates(prompt+content)
            updated_file.replace('```python', '')
            updated_file.replace('```', '')
            f_base.update_file_content(f, updated_file)
            
        except Exception as e :
           
            logger.error(e) 


if __name__ == '__main__': 
    main()
