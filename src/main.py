from log_config import setup_logging
from dotenv import load_dotenv
from mcp_client.session_manager import chat_session

load_dotenv()

logger = setup_logging("main")

def main():
    """
    _______GENERATED BY CODE_AGENT_______
    Main entry point of the application.
    Initializes the chat session with proper logging.
    """
    logger.info("Starting chat session.")
    chat_session()

def UNIT_test():
    """
    _______GENERATED BY CODE_AGENT_______
    Lightweight test suite for the main entry point.
    Tests that main() logs the start and calls chat_session().
    """
    import unittest
    from unittest.mock import patch
    import sys
    module = sys.modules[__name__]

    class _TestMain(unittest.TestCase):
        def test_main_calls_chat_and_logs(self):
            with patch.object(module, 'chat_session') as mock_chat, patch.object(module, 'logger') as mock_logger:
                module.main()
                mock_chat.assert_called_once()
                mock_logger.info.assert_called_with("Starting chat session.")

    suite = unittest.TestSuite()
    suite.addTest(_TestMain('test_main_calls_chat_and_logs'))
    runner = unittest.TextTestRunner()
    runner.run(suite)
if __name__ == '__main__': 
    main()